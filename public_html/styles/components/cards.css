/* components/cards.css */

/* Base card styles */
.card {
    background-color: var(--background-card);
    border-radius: var(--radius);
    border: 1px solid var(--border-color);
    transition: box-shadow var(--transition);
}

.card:hover {
    box-shadow: var(--shadow-hover);
}

/* Card sections */
.card-header {
    padding: var(--spacing-md);
    border-bottom: 1px solid var(--border-color);
}

.card-body {
    padding: var(--spacing-md);
}

.card-footer {
    padding: var(--spacing-md);
    border-top: 1px solid var(--border-color);
}

/* Card content layout */
.card-content {
    display: flex;
    gap: var(--spacing-lg);
}

.card-info {
    flex: 1;
    min-width: 0; /* Prevents flex item from overflowing */
}

/* Card media */
.card-media {
    flex-shrink: 0;
    width: 100px;
    height: 100px;
    border-radius: var(--radius);
    overflow: hidden;
}

.card-media img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Card typography */
.card-title {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--spacing-xs);
}

.card-description {
    color: var(--text-secondary);
    margin-bottom: var(--spacing-sm);
}

/* Section cards (for page sections) */
.section-card {
    margin-bottom: var(--spacing-lg);
}

.section-card h2 {
    margin-bottom: var(--spacing-md);
}

/* Piatti list */
.piatti-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.piatti-list .menu-item {
    margin: 0;
    transition:
        opacity var(--transition-normal),
        transform var(--transition-normal);
}

.piatti-list .menu-item[hidden] {
    display: none;
}

/* Menu item styles */
.menu-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    padding: var(--spacing-md);
    background-color: var(--background-card);
    border-radius: var(--radius);
    border: 1px solid var(--border-color);
    margin-bottom: var(--spacing-sm);
}

.menu-item figure {
    flex-shrink: 0;
}

.menu-item img {
    width: auto;
    height: 50px;
    border-radius: var(--radius-sm);
}

.menu-item-content {
    flex: 1;
    min-width: 0;
}

.menu-item-content h3 {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--spacing-xs);
}

.menu-item-content p {
    color: var(--text-secondary);
    font-size: var(--text-base);
}

.menu-item .ratings {
    display: flex;
    align-items: center;
    gap: 2px;
    margin-top: var(--spacing-sm);
}

.menu-item a {
    color: var(--primary);
    text-decoration: none;
    font-size: var(--text-sm);
    margin-top: var(--spacing-sm);
    display: inline-block;
}

.menu-item a:hover {
    text-decoration: underline;
}

/* Original menu items styles */
.menu-item {
    display: flex;
    gap: var(--spacing-md);
    padding: var(--spacing-md);
    border-radius: var(--radius);
    background-color: var(--background-card);
    box-shadow: var(--shadow);
    margin-bottom: var(--spacing-md);
}

.menu-item:last-child {
    margin-bottom: 0;
}

.menu-item[hidden] {
    display: none;
}

.menu-item figure {
    flex-shrink: 0;
}

.menu-item-content {
    flex: 1;
}

.menu-item-content h3 {
    margin-bottom: var(--spacing-xs);
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--text-primary);
}

.menu-item-content p {
    color: var(--text-secondary);
    margin-bottom: var(--spacing-sm);
}

.menu-item .ratings {
    display: flex;
    gap: 2px;
    margin-bottom: var(--spacing-sm);
}

.menu-item a {
    color: var(--primary);
    text-decoration: none;
}

.menu-item a:hover {
    text-decoration: underline;
}

/* Definition list styles in cards */
.card-info dl {
    margin: 0;
    padding: 0;
}

.card-info dt {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--spacing-xs);
}

.card-info dd {
    color: var(--text-secondary);
    margin: 0 0 var(--spacing-sm) 0;
    line-height: 1.5;
}

.card-info dd:last-of-type {
    margin-bottom: var(--spacing-md);
}

.card-info dd img {
    margin: var(--spacing-sm) 0;
    border-radius: var(--radius-sm);
}

/* Ratings within definition lists */
.card-info dd .ratings {
    display: flex;
    gap: 2px;
    margin: var(--spacing-sm) 0;
}

.card-info dd svg {
    width: 20px;
    height: 20px;
}

/* Dish of the day styles */
.dish-of-the-day .card-info dt {
    margin-bottom: var(--spacing-sm);
}

.dish-of-the-day .card-info .ratings {
    margin-top: var(--spacing-sm);
}

/* Mensa info styles */
.mense-info-section .card-info dt {
    font-size: var(--text-xl);
    margin-bottom: var(--spacing-sm);
}

.mense-info-section .card-info dd {
    font-size: var(--text-base);
}

/* Button styles within cards */
.card-info .nav-button {
    margin-top: var(--spacing-sm);
    padding: var(--spacing-sm) var(--spacing-lg);
}

/* Card variants */
.card-compact {
    padding: var(--spacing-sm);
}

.card-expanded {
    padding: var(--spacing-lg);
}

/* Interactive cards */
.card-interactive {
    cursor: pointer;
    transition:
        transform var(--transition),
        box-shadow var(--transition);
}

.card-interactive:hover {
    transform: translateY(-2px);
}

/* Card with action buttons */
.card-actions {
    display: flex;
    gap: var(--spacing-sm);
    justify-content: flex-end;
    margin-top: var(--spacing-md);
}

/* Card layouts */
.cards-grid {
    display: grid;
    gap: var(--spacing-md);
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

.cards-stack {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .card-content {
        flex-direction: column;
    }

    .card-media {
        width: 100%;
        height: 200px;
    }

    .card-expanded {
        padding: var(--spacing-md);
    }
}

/* Card loading state */
.card-skeleton {
    position: relative;
    overflow: hidden;
}

.card-skeleton::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(
        90deg,
        var(--background) 0%,
        var(--border-color) 50%,
        var(--background) 100%
    );
    animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}
